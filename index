<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" cantent="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <title>自動門pro max plus ultra TI 2.0</title> 
    <style>
        @import url("https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700;800;900&display=swap");
        * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Poppins", sans-serif;
        }

        body {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
        background: url('img.jpg') no-repeat;
        background-size: cover;
        background-position: center;
        }

        .wrapper{
        width: 420px;
        background: transparent;
        border: 2px solid rgba(255, 255, 255, .2);
        backdrop-filter: blur(20px);
        box-shadow: 0 0 10px rgba(0, 0, 0, .2);
        font-size: x-large;
        color: #fff;
        border-radius: 10px;
        padding: 30px 40px;
  /* Centering the element */
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        
    }

        .wrapper h1 {
        font-size: 36px;
        text-align: center;
        }

        .wrapper .input-box{
        position: relative;
        width: 100%;
        height: 50px;
        margin: 30px 0;
        }

        .input-box input{
        width: 100%;
        height: 100%;
        background: transparent;
        border: none;
        outline: none;
        border: 2px solid rgba(255, 255, 255, .2);
        border-radius: 40px;
        font-size: 16px;
        color: #fff;
        padding: 20px 45px 20px 20px;
        }

        .input-box input::placeholder{
        color: #fff;
        }

        .input-box i {
        position: absolute;
        right: 20px;
        top: 50%;
        transform: translateY(-50%);
        font-size: 20px;
        }

        .wrapper .btn{
        width: 100%;
        height: 45px;
        background: #fff;
        border: none;
        outline: none;
        border-radius: 40px;
        box-shadow: 0 0 10px rgba(0, 0, 0, .1);
        cursor: pointer;
        font-size: 16px;
        color: #333;
        font-weight: 600;
        margin: 20px 0 15px;
        transition: all .5s ease-in-out;
        }
        .sbtn{
        width: 30%;
        height: 90px;
        background: #fff;
        border: none;
        outline: none;
        border-radius: 90px;
        box-shadow: 0 0 10px rgba(0, 0, 0, .1);
        cursor: pointer;
        font-size: 16px;
        color: #333;
        font-weight: 600;
        margin: 20px 0 15px;
        transition: all .5s ease-in-out;
        position: fixed;
        left: 50%;
        transform: translateX(-50%);
        bottom: 0;
        transition: all .5s ease-in-out;
        }
        
        .wrapper .btn:hover {
            background-color: pink;
            color: white;
        }
        
        .wrapper .sbtn:hover {
            background-color: pink;
            color: white;
        }
        
    /* .cam{
        border-radius: 10px;
        z-index: 1;
        
    }

    .webcamVideo
    {
    z-index: 0;
    width: 100%;
    opacity:.65;
    min-height:100vh;
    margin: auto;
    position:absolute;
    min-width: 100%;
    border-radius: 10px;
    position:relative;
    position:fixed;
    background: transparent;
    border-radius: 5px;
    -webkit-transform: scaleX(-1);
    -moz-transform: scaleX(-1);
    -o-transform: scaleX(-1);
    transform: scaleX(-1);

    filter: FlipH;
    -ms-filter: "FlipH";
    } */

    </style>
    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet'>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.3.1/dist/tf.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@teachablemachine/image@0.8/dist/teachablemachine-image.min.js"></script>
    <script src="https://cdn.bootcss.com/noty/3.1.4/noty.min.js"></script>
</head>

<body>
    <div class="container"></div>

        <div class="wrapper" id="msgbox">
            <h1>Welcome</h1>
            <div class="input-box">
                <input type="text" id="modelurl" placeholder="Teachable Machine 模型網址" required>
                <i class='bx bx-link-alt'></i>
            </div>
            <div class="input-box" >
                <input type="text" id="activekey" placeholder="Adafruit IO 金鑰" required>
                <i class='bx bxs-key'></i>
            </div>
            <div class="input-box">
                <input type="text" id="username" placeholder="Adafruit IO 帳號" required>
                <i class='bx bxs-user'></i>
            </div>
            <div class="input-box">
                <input type="text" id="feed" placeholder="Adafruit IO Feed" required>
                <i class='bx bxs-file-blank'></i>
            </div>
            <button type="button" id="startBtn" class="btn" onclick="init()" disabled>Im Botton</button>
        </div>
        <button id="sendBtn" type="button" onclick="preding()" class="sbtn" style="display:none;"><h1>Don't Touch Me</h1></button>
        
        
        <div id="webcam-container" class="cam">
        <video playsinline="true" id="webcamVideo" width="700" height="500" style="display:none;"></video>
        </div>
    

   

    <div id="label-container" style="color: white; text-align: center; margin-top: 20px; display:none;"></div>
    <div id="webcam-container" class="cam" style="display:none;"></div>

    <script type="text/javascript">

        // More API functions here:
        // https://github.com/googlecreativelab/teachablemachine-community/tree/master/libraries/image
    
        $(document).ready(function () {
            $('#activekey').on('input', function () {
                if ($(this).val() != '') {
                    $('#startBtn').attr('disabled', false);
                }
                else {
                    $('#startBtn').attr('disabled', true);
                }
            });
        });

        async function init() {
            const modelUrl = $("#modelurl").val();
            const activeKey = $("#activekey").val();
            const username = $("#username").val();
            const feed = $("#feed").val();

            // Additional JavaScript initialization logic...
            $("#label-container").empty().show();
            $("#webcam-container").empty().show();
            $("#sendBtn").show();
            
            // Initialize the model and webcam here using the URLs and setup from above
            
            // Add your model loading and webcam setup code here as per Code A
        }
    
        let model, webcam, labelContainer, maxPredictions, aio_n, aio_k, aio_f;
        var sendClicked = false;
        var pred_result_index = 0;
        // Load the image model and setup the webcam
        async function init() {
    
            // the link to your model provided by Teachable Machine export panel
            const URL = document.getElementById("modelurl").value;
            document.getElementById("msgbox").style.display = "none";
            // document.getElementById("scoreBar").style.display = "block";
            labelContainer = document.getElementById("label-container");
            labelContainer.appendChild(document.createElement("h2"));
            labelContainer.firstChild.innerHTML = "模型讀取中..." ;      
            labelContainer.style.display = "block"; 
            labelContainer.style. position="fixed";
            labelContainer.style.top="0"
            labelContainer.style.left = "50%";
            labelContainer.style.transform="translateX(-50%)";
            labelContainer.style.width = "1000px";
            labelContainer.style.background = "transparent";
            labelContainer.style.border = "2px solid rgba(255, 255, 255, .2)";
            labelContainer.style.backdropFilter = "blur(20px)";
            labelContainer.style.boxShadow = "0 0 10px rgba(0, 0, 0, .2)";
            labelContainer.style.fontSize = "x-large";
            labelContainer.style.color = "#fff";
            labelContainer.style.borderRadius = "10px";
            labelContainer.style.padding = "15px 20px";
    
            //******Read AIO info.*******
            // Adafruit user name
            aio_n = document.getElementById("username").value; 
            // Adafruit IO Key
            aio_k = document.getElementById("activekey").value;
            // Adafruit feed name 
            aio_f = document.getElementById("feed").value; 
    
            const modelURL = URL + "model.json";
            const metadataURL = URL + "metadata.json";
    
            // load the model and metadata
            // Refer to tmImage.loadFromFiles() in the API to support files from a file picker
            // or files from your local hard drive
            model = await tmImage.load(modelURL, metadataURL);
            maxPredictions = model.getTotalClasses();
    
            //亂數機
            const generator = new Math.seedrandom(Date.now());
            const randomNumber = generator();
            //隨機出題，排除最後一類：背景
            qNum = Math.floor(Math.random() * (maxPredictions - 1));
    
            console.log(qNum);
            
    
            // convenience function to setup a webcam
            const flip = true; // whether to flip the webcam
            webcam = new tmImage.Webcam(200, 200, flip); // width, height
            await webcam.setup({ facingMode: "user" }); // use "user" to use front-cam on mobile phones
    
            // append elements to the DOM --> **before starting the webcam**
            // document.getElementById('webcam-container').appendChild(webcam.canvas); // just in case you want to use specifically the canvas
            document.getElementById('webcam-container').appendChild(webcam.webcam); // webcam object needs to be added in any case to make this work on iOS
    
            // grab video-object in any way you want and set the attributes --> **"muted" and "playsinline"**
            let wc = document.getElementsByTagName('video')[0];
            wc.setAttribute("playsinline", true); // written with "setAttribute" bc. iOS buggs otherwise :-)
    
            wc.muted = "true"
            wc.id = "webcamVideo";
    
            // only now start the webcam --> **after video-object added to DOM and attributes are set**
            webcam.play();
            window.requestAnimationFrame(loop); // update canvas by loop-functio
            document.getElementById("sendBtn").style.display = "block";
            // 更改 讀取中 文字
            labelContainer.firstChild.innerHTML = "準備好後請按下分享心情按鈕";
            //增加放 label 的 Div
            for (let i = 0; i < maxPredictions; i++) { // and class labels
                    labelContainer.appendChild(document.createElement("div"));
                }
            predict();
        }
    
        async function loop() {
            webcam.update(); // update the webcam frame
            // await predict();
            window.requestAnimationFrame(loop);
        }
    
        // run the webcam image through the image model
        function preding() {
            labelContainer.firstChild.innerHTML = '心情辨識中...';
            // document.getElementById("sendBtn").style.backgroundColor = "#bbb";
            // document.getElementById("sendBtn").setAttribute("disabled","true");
            console.log("辨識中");
            sendClicked = true;
            predict();
        }
        async function predict() { 
            // predict can take in an image, video or canvas html element
            const prediction = await model.predict(webcam.canvas);
    
            var pred_result = [];
            for (let i = 0; i < maxPredictions; i++) {
                    const Predct_Name = prediction[i].className;
                    const Predct_Probability = prediction[i].probability.toFixed(2);
                    
                    if (typeof pred_result !== 'undefined' && pred_result.length == 0){
                        pred_result = [parseFloat(Predct_Probability), Predct_Name];
                    }                
                    else if (parseFloat(Predct_Probability) > pred_result[0]){                   
                        pred_result = [parseFloat(Predct_Probability), Predct_Name];
                        pred_result_index = i;
                    }
                    
                    // console.log([parseFloat(Predct_Probability), parseFloat(pred_result[0])]);
                    
                    // labelContainer.childNodes[i].innerHTML = Predct_Name + " : " + Predct_Probability;
                }
            if (sendClicked){        
                labelContainer.firstChild.innerHTML = "您看起來有" + Math.floor(pred_result[0]*100) + "%心情是 " + pred_result[1];
                    //****POST Value****
                $.ajax({
                        url: "https://io.adafruit.com/api/v2/" + aio_n + "/feeds/" + aio_f + "/data?X-AIO-Key=" + aio_k,
                        type: "POST",
                        data: {
                            "value":pred_result_index
                        },
                        })
    
                        .fail(function () {
                        new Noty({
                            text: '無法發出通知',
                            type: 'error'
                        }).show();
                        });    
            }
            pred_result_index = 0;
    
            }
    
    </script>
</body>
